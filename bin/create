#!/usr/bin/env node

const path=require('path')
const exists = require('fs').existsSync
const inquirer = require('inquirer')
const download = require('download-git-repo')
const rm = require('rimraf').sync
const request = require('request')

const templateListJsonUrl = 'https://gitlab.com/8bulbs/template-json/-/raw/master/list.json'
request(
  {
    uri: templateListJsonUrl,
    timeout: 5000,
  },
  (err, res, body) => {
    if (err) {
      console.err(err)
    }
    if (res && res.statusCode === 200) {
      const templateList = JSON.parse(body)
      const choices = templateList.map(template => ({
        name: `${ template.name }, ${ template.description }`,
        value: template.name,
      }))
      inquirer
        .prompt([
          {
            type:'list',
            name:'templateName',
            choices,
            message:'Choose a template you want to build'
          }
        ])
        .then(answer => {
          const template = templateList.find(template => template.name === answer.templateName)
          const templateUrl = template.url
          const templateFramework = template.framework
          console.warn('templateUrl', templateUrl)
          inquirer
            .prompt([
              {
                type: 'input',
                name: 'appName',
                message: 'The name of project',
                default: `my_${ templateFramework }_app`,
              },
              {
                type: 'input',
                name: 'destination',
                message: 'The destination of project',
                default: process.cwd()
              }
            ])
            .then(answer => {
              const localPath = answer.destination
              const destination = path.join(path.isAbsolute(localPath) ? localPath : path.join(process.cwd(), localPath), answer.appName)
              if (exists(destination)) {
                inquirer.prompt([
                  {
                    type:'confirm',
                    name:'override',
                    message:'The project exists. override it?',
                  }
                ]).then(answer=>{
                  if (answer.override) {
                    rm(destination)
                    generateProject(destination, templateUrl)
                  }
                })
              } else {
                generateProject(destination, templateUrl)
              }
            })
        })
    }
  }
)

function generateProject (destination, url) {
  download(
    url,
    destination,
    {
      clone: true,
    },
    err => {
      console.warn(err ? err : 'success!')
    }
  )
}
